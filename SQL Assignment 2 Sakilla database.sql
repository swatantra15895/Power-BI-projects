use mavenmovies;

--- Retrieve the total number of rentals made in the Sakila database---
select count(rental_id) from rental;

--- Find the average rental duration (in days) of movies rented from the Sakila database ---
select avg(rental_duration) from film;

--- Display the first name and last name of customers in uppercase ---
select upper(concat(first_name," ",last_name)) as customer_name from customer;

--- Extract the month from the rental date and display it alongside the rental ID ---
select rental_id,month(rental_date) from rental group by(rental_id);

--- Retrieve the count of rentals for each customer (display customer ID and the count of rentals) ---
select customer_id,count(rental_id) from rental group by(customer_id);

--- Find the total revenue generated by each store ---

SELECT 
    store_id, SUM(amount) AS total_revenue
FROM
    store s
        INNER JOIN
    payment p ON s.manager_staff_id = p.staff_id
GROUP BY store_id;

--- Display the title of the movie, customer s first name, and last name who rented it ---

SELECT 
    f.title, c.first_name, c.last_name
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
        INNER JOIN
    customer c ON r.customer_id = c.customer_id;
    
    --- Retrieve the names of all actors who have appeared in the film "Gone Trouble" ---
    
    SELECT 
    CONCAT(first_name, ' ', last_name) AS actor_name,title
FROM
    actor a
        LEFT JOIN
    film_actor fa ON a.actor_id = fa.actor_id
        LEFT JOIN
    film f ON fa.film_id = f.film_id
WHERE
    title = 'Gone Trouble';
    
    --- Determine the total number of rentals for each category of movies. ---
        
    SELECT 
    category_id,COUNT(rental_id) as total_number_of_rentals
FROM
    rental r
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film_category fc ON i.film_id = fc.film_id
GROUP BY category_id;

--- Find the average rental rate of movies in each language. ---

select name,avg(rental_rate) from film f inner join language l on f.language_id=l.language_id group by name;

--- Retrieve the customer names along with the total amount they have spent on rentals. ---

SELECT 
    CONCAT(first_name, ' ', last_name) as customer_name,
    SUM(amount) as total_amount
FROM
    customer c
        INNER JOIN
    payment p ON c.customer_id = p.customer_id
GROUP BY customer_name;

--- List the titles of movies rented by each customer in a particular city (e.g., 'London'). ---

SELECT 
    CONCAT(first_name, ' ', last_name) AS customer_name,
    title,
    city
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
        INNER JOIN
    customer c ON r.customer_id = c.customer_id
        INNER JOIN
    address a ON c.address_id = a.address_id
        INNER JOIN
    city ct ON a.city_id = ct.city_id
WHERE
    city = 'London';
    
    --- Display the top 5 rented movies along with the number of times they have been rented. ---
    
    SELECT 
    title, COUNT(rental_id) as rental_count
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY title order by rental_count desc
LIMIT 5;

--- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). ---

SELECT 
    CONCAT(first_name, ' ', last_name) AS customer_name,
    i.store_id
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id;
